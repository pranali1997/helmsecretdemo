# Default values for centralconfig.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: docker.pkg.github.com/twcatalyst/configserver/com.thoughtworks.configserver
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0.0"

imagePullSecrets: [name: dockerregistry-secrets]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  loadBalancerIP: ""
  port: 8888

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

  hosts:
    - centralconfig.example.com
  path: /

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

config:
  paymentservice-dev.yml: |
    Fraud:
      Url: http://fraudservice-clusterip:8083
    Flyway:
      Url: jdbc:postgresql://postgresql.infra.svc.cluster.local:5432/payment_db_java
    DataSource:
      Url: jdbc:postgresql://postgresql.infra.svc.cluster.local:5432/payment_db_java
environments:
  SERVER_PORT: "8888"
  SPRING_PROFILES_ACTIVE: native
  spring_security_user_name: admin
  spring_security_user_password: ${PASSWORD}
secrets: {}
containerEnv: []
#  - name: spring_security_user_password
#    valueFrom:
#      secretKeyRef:
#        name: infra-central-config-secrets
#        key: spring_security_user_password
